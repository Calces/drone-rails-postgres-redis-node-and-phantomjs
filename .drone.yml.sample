build:
  image: calces/drone-rails-postgres-redis-node-and-phantomjs
  bash:
    - script:
      - echo 'CREATING DATABASE'
      - psql -c 'create database test;' -U postgres -h 127.0.0.1
      - echo 'INSTALLING NODE MODULES'
      - cd /drone/src/client
      - npm install
      - cd /drone/src
      - echo 'BUNDLE TIME'
      - mkdir -p /drone/.bundle
      - bundle config build.nokogiri --use-system-libraries
      - bundle install --path .bundle --without "production staging" --jobs 100 --retry 5
      - echo 'DATABASE SETUP TIME'
      - export RAILS_ENV=test
      - cp config/database.drone.yml config/database.yml
      - bundle exec rake db:test:prepare
      - echo 'PRECOMPILE ASSETS'
      - bundle exec rake assets:precompile
      - echo 'RUN RSPEC'
      - bundle exec rspec

cache:
  mount:
    - node_modules
    - client/node_modules
    - .bundle
    - .git

compose:
  database:
    image: postgres:9.5.1
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
  cache:
    image: redis:3.0.7-alpine

notify:
  slack:
    webhook_url: XXX
    channel: codehappenings
    username: drone
  email:
    recipients:
      - username@domain.com

deploy:
  heroku:
    app: appname
    when:
      branch: master
